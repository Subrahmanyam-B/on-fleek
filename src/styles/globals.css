@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  font-family: "Gotham Pro", sans-serif;
}

@font-face {
  font-family: "Gotham Pro";
  src: url("../../public/font/GothamPro.woff2") format("woff2"),
    url("../../public/font/GothamPro.woff") format("woff"),
    url("../../public/font/GothamPro.ttf") format("truetype");
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: "Gotham Pro";
  src: local("Gotham Pro Bold"), local("Gotham-Pro-Bold"),
    url("../../public/font/GothamPro-Bold.woff2") format("woff2"),
    url("../../public/font/GothamPro-Bold.woff") format("woff"),
    url("../../public/font/GothamPro-Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: bold;
}

@font-face {
  font-family: "Gotham Pro";
  src: local("Gotham Pro Light"), local("Gotham-Pro-Light"),
    url("../../public/font/GothamPro-Light.woff2") format("woff2"),
    url("../../public/font/GothamPro-Light.woff") format("woff"),
    url("../../public/font/GothamPro-Light.ttf") format("truetype");
  font-weight: 300;
  font-style: light;
}

@font-face {
  font-family: "Gotham Pro";
  src: local("Gotham Pro Medium"), local("Gotham-Pro-Medium"),
    url("../../public/font/GothamPro-Medium.woff2") format("woff2"),
    url("../../public/font/GothamPro-Medium.woff") format("woff"),
    url("../../public/font/GothamPro-Medium.ttf") format("truetype");
  font-weight: 500;
  font-style: medium;
}

input[type="range"]::-webkit-slider-thumb {
  width: 15px;
  -webkit-appearance: none;
  appearance: none;
  height: 3px;
  cursor: pointer;
  background: #fff;
  box-shadow: -405px 0 0 400px white;
  border-radius: 50%;
}

@layer base {
  .song:first-child,
  .song:first-child > * {
    @apply border-none;
  }

  .songs-list > * > div:not(:first-child) {
    @apply border-t-2;
  }
}

:root {
  --orange-color: #ff5f15;
}

.border-animation {
  --border-size: 3px;
  --border-angle: 0turn;

  background-image: conic-gradient(
      from var(--border-angle),
      var(--orange-color),
      var(--orange-color) 50%,
      var(--orange-color)
    ),
    conic-gradient(
      from var(--border-angle),
      transparent 20%,
      var(--orange-color),
      var(--orange-color)
    );
  background-size: calc(100% - (var(--border-size) * 2))
      calc(100% - (var(--border-size) * 2)),
    cover;
  background-position: center center;
  background-repeat: no-repeat;

  animation: bg-spin 3s linear infinite;
}

@property --border-angle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0turn;
}
@keyframes bg-spin {
  to {
    --border-angle: 1turn;
  }
}

&:hover {
  animation-play-state: paused;
}
